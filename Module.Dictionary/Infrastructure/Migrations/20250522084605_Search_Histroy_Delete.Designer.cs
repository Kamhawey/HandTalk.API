// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module.Dictionary.Infrastructure;

#nullable disable

namespace Module.Dictionary.Infrastructure.Migrations
{
    [DbContext(typeof(DictionaryModuleDbContext))]
    [Migration("20250522084605_Search_Histroy_Delete")]
    partial class Search_Histroy_Delete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Dictionary")
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Module.Dictionary.Domain.Models.DictionaryEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gloss")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("SearchCount")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Gloss");

                    b.HasIndex("SearchCount");

                    b.ToTable("DictionaryEntries", "Dictionary");
                });

            modelBuilder.Entity("Module.Dictionary.Domain.Models.UserFavoriteGloss", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("DictionaryEntryId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryEntryId");

                    b.HasIndex("UserId", "DictionaryEntryId")
                        .IsUnique();

                    b.ToTable("UserFavoriteGlosses", "Dictionary");
                });

            modelBuilder.Entity("Module.Dictionary.Domain.Models.UserSearchHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("MatchedDictionaryEntryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SearchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SearchText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MatchedDictionaryEntryId");

                    b.HasIndex("UserId", "SearchDate");

                    b.ToTable("UserSearchesHistory", "Dictionary");
                });

            modelBuilder.Entity("Module.Dictionary.Domain.Models.UserFavoriteGloss", b =>
                {
                    b.HasOne("Module.Dictionary.Domain.Models.DictionaryEntry", "DictionaryEntry")
                        .WithMany("UserFavorites")
                        .HasForeignKey("DictionaryEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DictionaryEntry");
                });

            modelBuilder.Entity("Module.Dictionary.Domain.Models.UserSearchHistory", b =>
                {
                    b.HasOne("Module.Dictionary.Domain.Models.DictionaryEntry", "MatchedDictionaryEntry")
                        .WithMany()
                        .HasForeignKey("MatchedDictionaryEntryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatchedDictionaryEntry");
                });

            modelBuilder.Entity("Module.Dictionary.Domain.Models.DictionaryEntry", b =>
                {
                    b.Navigation("UserFavorites");
                });
#pragma warning restore 612, 618
        }
    }
}
